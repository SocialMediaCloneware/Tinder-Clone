{"version":3,"sources":["Header.js","axios.js","TinderCards.js","SwipeButtons.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","IconButton","fontSize","src","alt","instance","axios","create","baseURL","TinderCards","useState","people","setPeople","useEffect","a","get","req","data","fetchData","console","log","map","person","preventSwipe","onSwipe","dir","nameToDelete","name","onCardLeftScreen","style","background","imgUrl","SwipeButtons","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8UA+BeA,MAzBf,WACI,OACI,sBAAKC,UAAU,SAAf,UACI,cAACC,EAAA,EAAD,UACG,cAAC,IAAD,CAAYC,SAAS,QAAQF,UAAU,mBAG9C,qBAEIA,UAAU,eACVG,IAAI,mEACJC,IAAI,gBAGR,cAACH,EAAA,EAAD,UACA,cAAC,IAAD,CAAWC,SAAS,QAAQF,UAAU,uB,yCCf/BK,E,OAJEC,EAAMC,OAAO,CAC1BC,QAAS,uD,uBCkDEC,MAhDf,WAAwB,IAAD,EACSC,mBAAS,IADlB,mBACZC,EADY,KACJC,EADI,KAuBnB,OApBAC,qBAAU,WAAM,4CACZ,4BAAAC,EAAA,sEACmBR,EAAMS,IAAI,iBAD7B,OACOC,EADP,OAECJ,EAAUI,EAAIC,MAFf,4CADY,uBAAC,WAAD,wBAMZC,KACD,IAWPC,QAAQC,IAAIT,GAGJ,qBAAKX,UAAU,cAAf,SACI,qBAAKA,UAAU,6BAAf,SACCW,EAAOU,KAAI,SAAAC,GAAM,OAClB,cAAC,IAAD,CACItB,UAAU,QAEVuB,aAAc,CAAC,KAAK,QACpBC,QAAS,SAACC,GAAD,OAnBMC,EAmBcJ,EAAOK,UAlB5CR,QAAQC,IAAI,aAAeM,GADhB,IAAYA,GAoBfE,iBAAkB,kBAfVD,EAe0BL,EAAOK,UAdjDR,QAAQC,IAAIO,EAAO,mBADJ,IAACA,GAUZ,SAQI,qBAAKE,MAAO,CAACC,WAAW,OAASR,EAAOS,OAAS,KACjD/B,UAAU,OADV,SAEA,6BAAKsB,EAAOK,UARPL,EAAOK,c,6FCIbK,MA5Bf,WACI,OACI,sBAAKhC,UAAU,eAAf,UAEA,cAACC,EAAA,EAAD,CAAYD,UAAU,uBAAtB,SACI,cAAC,IAAD,CAAYE,SAAS,YAGzB,cAACD,EAAA,EAAD,CAAYD,UAAU,qBAAtB,SACI,cAAC,IAAD,CAAWE,SAAS,YAGxB,cAACD,EAAA,EAAD,CAAYD,UAAU,qBAAtB,SACI,cAAC,IAAD,CAAcE,SAAS,YAG3B,cAACD,EAAA,EAAD,CAAYD,UAAU,sBAAtB,SACI,cAAC,IAAD,CAAcE,SAAS,YAG3B,cAACD,EAAA,EAAD,CAAYD,UAAU,0BAAtB,SACI,cAAC,IAAD,CAAaE,SAAS,gBChBnB+B,MAVf,WACE,OACE,sBAAKjC,UAAU,MAAf,UACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,QCEWkC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.24d07f74.chunk.js","sourcesContent":["import React from 'react';\nimport \"./Header.css\";\nimport PersonIcon from '@material-ui/icons/Person';\nimport IconButton from '@material-ui/core/IconButton';\nimport ForumIcon from '@material-ui/icons/Forum';\n\nfunction Header() {\n    return (\n        <div className='header'>\n            <IconButton> \n               <PersonIcon fontSize='large' className=\"header__icon\"/> \n            </IconButton>\n\n        <img \n        \n            className=\"header__logo\"\n            src=\"https://1000logos.net/wp-content/uploads/2018/07/tinder-logo.png\"\n            alt=\"tinder logo\"\n        />\n        \n        <IconButton> \n        <ForumIcon fontSize='large' className=\"header__icon\"/>\n        </IconButton>\n        \n         \n        </div>\n\n\n    )\n}\n\nexport default Header\n","import axios from 'axios'\n\nconst instance = axios.create({\n    baseURL: 'https://tinder-backend-clone-social.herokuapp.com/'\n});\n\nexport default instance;","import axios from './axios.js';\nimport React, {useState, useEffect} from 'react'\nimport TinderCard from 'react-tinder-card'\nimport \"./TinderCards.css\"\n\nfunction TinderCards() {\n    const [people, setPeople] = useState([]);\n\n    useEffect(() => {\n        async function fetchData() {\n         const req = await axios.get(\"/tinder/cards\")\n         setPeople(req.data);\n        }\n\n        fetchData();\n    }, [])\n    \n    const swiped = (direction, nameToDelete) => {\n        console.log(\"removing: \" + nameToDelete);\n\n    };\n\n    const outOfFrame = (name) => {\n        console.log(name + \"left the screen\");\n    };\n\nconsole.log(people);\n\n    return (\n        <div className=\"tinderCards\">\n            <div className=\"tinderCards__cardContainer\">\n            {people.map(person =>(\n            <TinderCard\n                className=\"swipe\"\n                key={person.name}\n                preventSwipe={[\"up\",\"down\"]}\n                onSwipe={(dir)=> swiped(dir, person.name)}\n                onCardLeftScreen={()=> outOfFrame(person.name)}\n                \n            >\n                <div style={{background:\"url(\" + person.imgUrl + \")\"}}\n                className=\"card\">\n                <h3>{person.name}</h3>\n\n                </div>\n            </TinderCard>\n            ))}\n\n            </div>\n        </div>\n    )\n}\n\nexport default TinderCards\n","import React from 'react'\nimport \"./SwipeButtons.css\"\nimport ReplayIcon from \"@material-ui/icons/Replay\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport StarRateIcon from \"@material-ui/icons/StarRate\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport FlashOnIcon from \"@material-ui/icons/FlashOn\";\nimport IconButton from \"@material-ui/core/IconButton\"\n// import swiped from \"./TinderCards\"\n\nfunction SwipeButtons() {\n    return (\n        <div className=\"swipeButtons\">  \n\n        <IconButton className=\"swipeButtons__repeat\" >\n            <ReplayIcon fontSize=\"large\" />\n        </IconButton>\n\n        <IconButton className=\"swipeButtons__left\" >\n            <CloseIcon fontSize=\"large\" />\n        </IconButton>\n\n        <IconButton className=\"swipeButtons__star\" >\n            <StarRateIcon fontSize=\"large\" />\n        </IconButton>\n\n        <IconButton className=\"swipeButtons__right\" >\n            <FavoriteIcon fontSize=\"large\" />\n        </IconButton>\n\n        <IconButton className=\"swipeButtons__lightning\" >\n            <FlashOnIcon fontSize=\"large\" />\n        </IconButton>\n    \n        </div>\n    )\n}\n\nexport default SwipeButtons\n","import './App.css';\nimport Header from \"./Header\";\nimport TinderCards from \"./TinderCards\";\nimport SwipeButtons from \"./SwipeButtons\";\n\nfunction App() {\n  return (\n    <div className=\"app\">\n    <Header/>\n    <TinderCards/>\n    <SwipeButtons/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}